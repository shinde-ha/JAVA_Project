/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Bank;

import Business.BankAccount.BankAccount;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Organisation.BankOrganisation;
import Business.Organisation.BorrowerOrganisation;
import Business.Organisation.ModeratorOrganisation;
import Business.Organisation.Organisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BankerWorkRequest;
import Business.WorkQueue.ModeratorRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Properties;
import javax.*;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manas
 */
public class ModeratorRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ModeratorRequestJPanel
     */
    private JPanel leftContainer;
    private JPanel rightContainer;
    private Enterprise enterprise;
    private UserAccount userAccount ;
    private Ecosystem system;
    private BankOrganisation bankOrganisation;

    ModeratorRequestJPanel(JPanel rightContainer, Enterprise enterprise, UserAccount userAccount, Ecosystem system) {
       initComponents();
       this.leftContainer = leftContainer;
        this.rightContainer = rightContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system = system;//To change body of generated methods, choose Tools | Templates.
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblModeratorRequests = new javax.swing.JTable();
        btnManageRequests = new javax.swing.JButton();
        btnTransaction = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Requests from Moderator");

        tblModeratorRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Borrower", "Lender", "DonatedAmount", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblModeratorRequests);

        btnManageRequests.setText("Manage Requests");
        btnManageRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageRequestsActionPerformed(evt);
            }
        });

        btnTransaction.setText("transaction");
        btnTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(439, 439, 439))
            .addGroup(layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(btnManageRequests, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(btnTransaction)
                .addContainerGap(231, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnManageRequests)
                    .addComponent(btnTransaction))
                .addContainerGap(259, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageRequestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageRequestsActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblModeratorRequests.getSelectedRow();

        if (selectedRow < 0){
            
            JOptionPane.showMessageDialog(null,"Please select a row","Warning",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        ModeratorRequest request = (ModeratorRequest) tblModeratorRequests.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Processing");
        
        
        populateTable();
        
        BorrowerAcknowldgementJPanel borrowerJPanel = new BorrowerAcknowldgementJPanel(rightContainer,enterprise,userAccount,system,request);
        rightContainer.add("borrowerJPanel",borrowerJPanel);
        CardLayout cardLayout = (CardLayout)rightContainer.getLayout();
        cardLayout.next(rightContainer);
        
        
        
    }//GEN-LAST:event_btnManageRequestsActionPerformed

    private void btnTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblModeratorRequests.getSelectedRow();

        if (selectedRow < 0){
            
            JOptionPane.showMessageDialog(null,"Please select a row","Warning",JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        ModeratorRequest request = (ModeratorRequest) tblModeratorRequests.getValueAt(selectedRow, 0);
        
        
        BankAccount len1 = request.getLender1().getBankAccount();
        float abc = len1.getBankBalance() - request.getLoanAmount();
        len1.setBankBalance(abc);
        System.out.println(len1.getBankBalance());
        
        BankAccount bor = request.getSender().getBankAccount();
        float xyz =  bor.getBankBalance() + request.getLoanAmount();
        bor.setBankBalance(xyz);
        System.out.println(bor.getBankBalance());
        
        Date date=new Date();
        request.setRequestDate(date);
        
        
        populateTable();
        
        
        BorrowerAcknowldgementJPanel borrowerJPanel = new BorrowerAcknowldgementJPanel(rightContainer,enterprise,userAccount,system,request);
        rightContainer.add("borrowerJPanel",borrowerJPanel);
        CardLayout cardLayout = (CardLayout)rightContainer.getLayout();
        cardLayout.next(rightContainer);
        
    }//GEN-LAST:event_btnTransactionActionPerformed
        
    public void populateTable(){
         Organisation org = null;
            for (Organisation organisation : enterprise.getOrganisationDirectory().getOrganisationList()){
            if (organisation instanceof ModeratorOrganisation){
                org = organisation;
                break;
            }
        }
        if (org!=null){
            DefaultTableModel model = (DefaultTableModel) tblModeratorRequests.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : org.getWorkQueue().getWorkRequestList()){
            if(request instanceof ModeratorRequest){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = ((ModeratorRequest) request).getLender1();
            row[2] =  ((ModeratorRequest) request).getLentAmount();
            row[3] =request.getStatus();
            
            

            
            model.addRow(row);
        }
        }
        }
    }
    

    public void sendmail(String from, String password, String to, String sub, String msg){
        Properties props = new Properties();
      props.put("mail.smtp.host", "smtp.gmail.com");
      props.put("mail.smtp.socketFactory.port", "465");
      props.put("mail.smtp.socketFactory.class",
              "javax.net.ssl.SSLSocketFactory");
      props.put("mail.smtp.auth", "true");
      props.put("mail.smtp.port", "465");
      //get Session  
        Session session = Session.getDefaultInstance(props,
         new javax.mail.Authenticator() {
          protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
              return new javax.mail.PasswordAuthentication(from, password);
          }
      });
      //compose message    
      try {
          MimeMessage message = new MimeMessage(session);
          message.setFrom(new InternetAddress(from));
          message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
          message.setSubject(sub);
          message.setText(msg);
          //send message  
          javax.mail.Transport.send(message);
          System.out.println("message sent successfully");
      } catch (javax.mail.MessagingException e) {
          throw new RuntimeException(e);
      }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManageRequests;
    private javax.swing.JButton btnTransaction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblModeratorRequests;
    // End of variables declaration//GEN-END:variables
}
