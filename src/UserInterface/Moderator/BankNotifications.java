/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Moderator;

import Business.BankAccount.BankAccount;
import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organisation.BankOrganisation;
import Business.Organisation.BorrowerOrganisation;
import Business.Organisation.ModeratorOrganisation;
import Business.Organisation.Organisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BankerWorkRequest;
import Business.WorkQueue.BorrowerLoanRepayRequest;
import Business.WorkQueue.ModeratorRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manas
 */
public class BankNotifications extends javax.swing.JPanel {

    /**
     * Creates new form BankNotifications
     */
//    private JPanel leftContainer;
    private JPanel rightContainer;
    private Enterprise enterprise;
    private UserAccount account;
    private Ecosystem system;

    BankNotifications( JPanel rightContainer, Enterprise enterprise, UserAccount account, Ecosystem system) {
        initComponents();
//        this.leftContainer = leftContainer;
        this.rightContainer = rightContainer;
        this.enterprise = enterprise;
        this.account = account;
        this.system = system;
        
        populateTable();
        //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        borrowerJTable = new javax.swing.JTable();
        borrowerRefreshTable = new javax.swing.JButton();
        textStash = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textModBalance = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnDeduct = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        borrowerJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Borrower", "Message", "Banker", "Repay Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(borrowerJTable);

        borrowerRefreshTable.setText("Refresh");
        borrowerRefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowerRefreshTableActionPerformed(evt);
            }
        });

        jLabel2.setText("Stash amount balance");

        jLabel1.setText("My Bank Balance");

        btnDeduct.setText("Deduct");
        btnDeduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(464, 464, 464)
                        .addComponent(borrowerRefreshTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)))
                .addComponent(textModBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(77, 77, 77)
                                .addComponent(textStash, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(btnDeduct, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(borrowerRefreshTable))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textModBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textStash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(btnDeduct)
                .addContainerGap(235, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        int selectedRow = borrowerJTable.getSelectedRow();
//        if (message.equals("") || message.isEmpty()) {
//            JOptionPane.showMessageDialog(null, "Please enter something to send.");
//            return;
//            
//            
//        }

        if (selectedRow < 0) {

            JOptionPane.showMessageDialog(null, "Please select row");
                return;
        }

    ModeratorRequest borrowerRequest = (ModeratorRequest) borrowerJTable.getValueAt(selectedRow, 1);
    borrowerRequest.setStatus("Approved");
//        BorrowerLoanRepayRequest request = borrowerAccount.getWorkQueue().getWorkRequestList();
//        borrowerRequest.setMessage(message);

//        borrowerRequest.setSender(account);
       

//        request.setBorrowerName(String.valueOf(ComboBoxBorrowers.getSelectedItem()));
//        Organisation org = null;
//        for (Organisation organization : enterprise.getOrganisationDirectory().getOrganisationList()) {
//            if (organization instanceof BorrowerOrganisation) {
//                org = organization;
//                break;
//            }
//        }
//        if (org != null) {
//            org.getWorkQueue().getWorkRequestList().add(borrowerRequest);
//            account.getWorkQueue().getWorkRequestList().add(borrowerRequest);
//        }

        JOptionPane.showMessageDialog(null, " Loan Approved for the borrower","InformmationMessage",JOptionPane.INFORMATION_MESSAGE);
//        txtMessage.setText("");

    }//GEN-LAST:event_btnSendActionPerformed


    private void borrowerRefreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowerRefreshTableActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_borrowerRefreshTableActionPerformed

    private void btnDeductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeductActionPerformed
        // TODO add your handling code here:
        int selectedRow = borrowerJTable.getSelectedRow();
        
        if (selectedRow < 0) {

            JOptionPane.showMessageDialog(null, "Please select row");
                return;
        }
        
        ModeratorRequest request = (ModeratorRequest) borrowerJTable.getValueAt(selectedRow, 0);
        BankAccount len = request.getLender1().getBankAccount();
        float balance = len.getBankBalance();
        int repayAmount=request.getRepayAmount();
        balance = balance + repayAmount;
        len.setBankBalance(balance);
        
        BankAccount mod = account.getBankAccount();
        float modbal= mod.getBankBalance();
        modbal = modbal - repayAmount;
        mod.setBankBalance(modbal);
        
        
        
    }//GEN-LAST:event_btnDeductActionPerformed
    private void populateTable() {
        
         float total = 0;
        float stash = 0;
         

        Organisation org = null;
        for (Organisation organisation : enterprise.getOrganisationDirectory().getOrganisationList()) {
            if (organisation instanceof ModeratorOrganisation) {
                org = organisation;
                break;
            }
        }
        if (org != null) {
            DefaultTableModel model = (DefaultTableModel) borrowerJTable.getModel();

            model.setRowCount(0);
            for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                if (request instanceof ModeratorRequest) {
                    Object[] row = new Object[4];
                    row[0] = request;
                    row[1] = request.getMessage();
                    row[2] = ((ModeratorRequest) request).getReceiver();
                    row[3] = ((ModeratorRequest) request).getRepayAmount();
                    stash=((ModeratorRequest) request).getRepayAmount();
                    total = stash + total;
                    request.setStash(total);

                    model.addRow(row);
                }
            }
            
            textStash.setText(String.valueOf(total));
            
        }
            account.getBankAccount().setBankBalance(total);
            textModBalance.setText(String.valueOf(account.getBankAccount().getBankBalance()));
   }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable borrowerJTable;
    private javax.swing.JButton borrowerRefreshTable;
    private javax.swing.JButton btnDeduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField textModBalance;
    private javax.swing.JTextField textStash;
    // End of variables declaration//GEN-END:variables
}
