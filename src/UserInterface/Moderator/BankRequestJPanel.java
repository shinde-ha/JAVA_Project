/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Moderator;

import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organisation.BankOrganisation;
import Business.Organisation.BorrowerOrganisation;
import Business.Organisation.LenderOrganisation;
import Business.Organisation.ModeratorOrganisation;
import Business.Organisation.Organisation;
import static Business.Organisation.Organisation.Type.Borrower;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BankerWorkRequest;
import Business.WorkQueue.ModeratorRequest;
import Business.WorkQueue.LenderWorkRequest;
import Business.WorkQueue.ModeratorWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manas
 */
public class BankRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BankRequestJPanel
     */
    private JPanel leftContainer;
    private JPanel rightContainer;
    private Enterprise enterprise;
    private UserAccount account;
    private Ecosystem system;
    private ModeratorRequest request;

    BankRequestJPanel(JPanel rightContainer, Enterprise enterprise, UserAccount account, Ecosystem system,ModeratorRequest request) {
        initComponents();
        this.rightContainer = rightContainer;
        this.leftContainer = leftContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.system = system;//To change body of generated methods, choose Tools | Templates.
        this.request=request;
//        populateComboBox();
        populateModeratorTable();
        label1.setText(String.valueOf(request.getSender()));
        txtMessage.setText("Loan approved |Money Transfer Initiation request");

    }

    BankRequestJPanel(JPanel leftContainer, JPanel rightContainer, Enterprise enterprise, UserAccount account, Ecosystem system) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

//    private void populateComboBox() {
//
//        ComboBoxBorrowers.removeAllItems();
//        ComboBoxBorrowers.addItem(request);
//        Organisation org = null;
//        for (Organisation organization : enterprise.getOrganisationDirectory().getOrganisationList()) {
//            if (organization instanceof BorrowerOrganisation) {
//                org = organization;
//                break;
//            }
//        }
//        if (org != null) {
//
//            for (Employee emp : org.getEmployeeDirectory().getEmployeeList()) {
////                 String borrowerName=emp.getName();
//                ComboBoxBorrowers.addItem(emp);
//
//            }
//        }
//
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        BTNSend = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableModeratorRequest = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();

        label1.setBackground(new java.awt.Color(255, 255, 255));
        label1.setText("Request Message");

        txtMessage.setEditable(false);
        txtMessage.setBackground(new java.awt.Color(255, 255, 255));
        txtMessage.setEnabled(false);
        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });

        BTNSend.setText("Send");
        BTNSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNSendActionPerformed(evt);
            }
        });

        tableModeratorRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Borrower"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableModeratorRequest);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addGap(75, 75, 75))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(BTNSend, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(424, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTNSend, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(145, 145, 145)
                .addComponent(btnRefresh)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(399, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BTNSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSendActionPerformed
        // TODO add your handling code here:

        String message = txtMessage.getText();
        if (message.equals("") || message.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter something to send.");
            return;
        }

        BankerWorkRequest request = new BankerWorkRequest();
        request.setMessage(message);

        request.setSender(account);
        request.setStatus("Sent");
        
//        request.setBorrowerName((Employee) ComboBoxBorrowers.getSelectedItem());

        Organisation org = null;
        for (Organisation organization : enterprise.getOrganisationDirectory().getOrganisationList()) {
            if (organization instanceof BankOrganisation) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }

        JOptionPane.showMessageDialog(null, "Message sent");
       
        populateModeratorTable();
    }//GEN-LAST:event_BTNSendActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateModeratorTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    public void populateModeratorTable() {
        DefaultTableModel model = (DefaultTableModel) tableModeratorRequest.getModel();
        model.setRowCount(0);
        //Employee employee = (Employee) ComboBoxBorrowers.getSelectedItem();
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            if (request instanceof BankerWorkRequest) {
                Object[] row = new Object[5];
                row[1] = request;
                row[0] = request.getMessage();
                row[2] = ((BankerWorkRequest) request).getBorrowerName();
//            row[2]=  ((Moderato;
//            row[3]= ((ModeratorRequest) request).getBorrowerName();
//            row[4]=((BankerWorkRequest) request).getMessage();

                model.addRow(row);

            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNSend;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label1;
    private javax.swing.JTable tableModeratorRequest;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
