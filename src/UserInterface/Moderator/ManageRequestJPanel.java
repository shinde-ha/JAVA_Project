/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Moderator;

import Business.BankAccount.BankAccount;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Organisation.AdminOrganisation;
import Business.Organisation.BorrowerOrganisation;
import Business.Organisation.LenderOrganisation;
import Business.Organisation.ModeratorOrganisation;
import Business.Organisation.Organisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ModeratorRequest;
import Business.WorkQueue.LenderWorkRequest;
import Business.WorkQueue.ModeratorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harsh $hinde
 */
public class ManageRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRequestJPanel
     */
   
    private JPanel rightContainer;
    private Enterprise enterprise;
    private UserAccount account;
    private Ecosystem system;
    
//    private ModeratorAccount maccount;

    ManageRequestJPanel(JPanel rightContainer, Enterprise enterprise, UserAccount account, Ecosystem system) {
        initComponents(); //To change body of generated methods, choose Tools | Templates.
        this.system = system;
        this.enterprise = enterprise;
        this.rightContainer = rightContainer;
        this.account = account;
        
    }
    
    private void populateBorrowerTable() {
        //To change body of generated methods, choose Tools | Templates.
        Organisation org = null;
        for (Organisation organisation : enterprise.getOrganisationDirectory().getOrganisationList()){
            if (organisation instanceof ModeratorOrganisation){
                org = organisation;
                break;
            }
        }
        if (org!=null){
            DefaultTableModel model = (DefaultTableModel) tblBorrowerWorkRequests.getModel();
            model.setRowCount(0);
        
            for (WorkRequest request : org.getWorkQueue().getWorkRequestList()){
                if(request instanceof ModeratorRequest){
                Object[] row = new Object[6];
                row[0] = request.getMessage();
                row[1] = request;
                row[2] = request.getReceiver() == null ? "Waiting" : request.getReceiver().getEmployee().getName();
                row[3] = request.getStatus();
                row[4] = ((ModeratorRequest) request).getLoanAmount();
               
                
                model.addRow(row);
                }
            }
        }
    }

    private void populateLenderTable() {
         //To change body of generated methods, choose Tools | Templates.
        float total = 0;
        float stash = 0;
         
        Organisation org = null;
        for (Organisation organisation : enterprise.getOrganisationDirectory().getOrganisationList()){
            if (organisation instanceof ModeratorOrganisation){
                org = organisation;
                break;
            }
        }
        if (org!=null){
            DefaultTableModel model = (DefaultTableModel) tblLenderWorkRequests.getModel();
            model.setRowCount(0);
            for (WorkRequest request : org.getWorkQueue().getWorkRequestList()){
                if(request instanceof ModeratorRequest){
                Object[] row = new Object[7];
                row[0] = ((ModeratorRequest) request).getLenderMessage();
                row[1] = request;
                row[2] = ((ModeratorRequest) request).getLender1();
                row[3] = request.getStatus();
                row[4]=((ModeratorRequest) request).getLentAmount();
                row[5] = ((ModeratorRequest) request).getDuration();
                row[6]=request.getRequestDate();
                
                total = stash + total;
                request.setStash(total);
                model.addRow(row);
            }
        }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrowerWorkRequests = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLenderWorkRequests = new javax.swing.JTable();
        refreshBorrBtn = new javax.swing.JButton();
        lenderRefreshTable = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(4, 0), new java.awt.Dimension(4, 0), new java.awt.Dimension(4, 32767));
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        btnApproveLoan = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnForward = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 255));

        tblBorrowerWorkRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "sender", "receiver", "status", "LoanRequested", "Lender1", "Lender2", "Lender3", "PendingAmount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBorrowerWorkRequests);

        tblLenderWorkRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Lender", "Status", "Donated Amount", "Duration", "RequestDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblLenderWorkRequests);

        refreshBorrBtn.setText("Refresh");
        refreshBorrBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBorrBtnActionPerformed(evt);
            }
        });

        lenderRefreshTable.setText("Refresh");
        lenderRefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lenderRefreshTableActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Requests");

        jLabel3.setText("Borrower Work Request");

        jLabel4.setText("Lender Work Request");

        btnApproveLoan.setText("Approve Loan");
        btnApproveLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveLoanActionPerformed(evt);
            }
        });

        btnProcess.setText("Process Request");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign Me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnForward.setText("Forward Request to Bank");
        btnForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(444, 444, 444)
                .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(253, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(208, 208, 208))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(refreshBorrBtn)
                                .addGap(45, 45, 45)
                                .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnProcess)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnApproveLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(lenderRefreshTable)
                        .addGap(270, 270, 270)
                        .addComponent(btnForward, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(367, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshBorrBtn)
                    .addComponent(btnAssign)
                    .addComponent(btnProcess)
                    .addComponent(btnApproveLoan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnForward)
                            .addComponent(lenderRefreshTable))
                        .addGap(144, 144, 144))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBorrBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBorrBtnActionPerformed
        // TODO add your handling code here:
        populateBorrowerTable();
    }//GEN-LAST:event_refreshBorrBtnActionPerformed

    private void lenderRefreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lenderRefreshTableActionPerformed
        // TODO add your handling code here:
        populateLenderTable();
    }//GEN-LAST:event_lenderRefreshTableActionPerformed

    private void btnApproveLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveLoanActionPerformed
           // TODO add your handling code here:\
           
           int selectedRow = tblBorrowerWorkRequests.getSelectedRow();
           
           ModeratorRequest request= (ModeratorRequest) tblBorrowerWorkRequests.getValueAt(selectedRow, 1);

        if (selectedRow < 0){
            return;
        }
        
        BankRequestJPanel bankJPanel = new BankRequestJPanel(rightContainer, enterprise, account, system,request);
        rightContainer.add("DonateFundsJPanel",  bankJPanel);
        CardLayout layout = (CardLayout) rightContainer.getLayout();
        layout.next(rightContainer);
        
        
    }//GEN-LAST:event_btnApproveLoanActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        
//           int selectedRow = tblBorrowerWorkRequests.getSelectedRow();
//           
//           ModeratorRequest request= (ModeratorRequest) tblBorrowerWorkRequests.getValueAt(selectedRow, 1);
//
//        if (selectedRow < 0){
//            JOptionPane.showMessageDialog(null,"Please select a row");
//            return;
//        }
//        
//        ProcessRequestJPanel processRequestJPanel = new ProcessRequestJPanel(rightContainer, enterprise, account, system,request);
//        rightContainer.add("ProcessRequestJPanel",  processRequestJPanel);
//        CardLayout layout = (CardLayout) rightContainer.getLayout();
//        layout.next(rightContainer);
//        
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
         
        int selectedRow = tblBorrowerWorkRequests.getSelectedRow();

        if (selectedRow < 0){
            return;
           } 
           ModeratorRequest request = (ModeratorRequest)tblBorrowerWorkRequests.getValueAt(selectedRow,1);
        request.setReceiver(account);
                     request.setStatus("Processing");
//               ModeratorAccount maccount=account;
        JOptionPane.showMessageDialog(null, "Receiever set");
        populateBorrowerTable();
        
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardActionPerformed
        // TODO add your handling code here:
        
          int selectedRow = tblBorrowerWorkRequests.getSelectedRow();

        if (selectedRow < 0){
            
            JOptionPane.showMessageDialog(null," Request sent to Bank");
            return;
           } 
          
        
        
    }//GEN-LAST:event_btnForwardActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproveLoan;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnForward;
    private javax.swing.JButton btnProcess;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton lenderRefreshTable;
    private javax.swing.JButton refreshBorrBtn;
    private javax.swing.JTable tblBorrowerWorkRequests;
    private javax.swing.JTable tblLenderWorkRequests;
    // End of variables declaration//GEN-END:variables

   
    
        
}
